<!doctype html>
<html>
<head>
<title>Timer</title>

<script src="https://unpkg.com/react@15/dist/react.js"></script>
<script src="https://unpkg.com/react-dom@15/dist/react-dom.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js"></script>
<link rel="stylesheet" href="styles.css" >
</head>

<body>
<div id="root"></div>
</body>
<script type="text/babel">

var changed = false;

class GameDisplay extends React.Component{
  constructor(props){
    super(props);
    this.colorChange = this.colorChange.bind(this);
    this.state = {
      secondsElapsed: 0,
    };
  }

  tick(){
    setTimeout(() => this.colorChange(), 250);
    setTimeout(() => this.colorChange(), 250);
    this.colorChange();
    this.setState((prevState) => ({
      secondsElapsed: prevState.secondsElapsed + 1,
    }));
  }

  colorChange(){
    var tgt = document.getElementById("heart");
    if (changed){
      tgt.style.fill = "red";
    } else {
      tgt.style.fill = "green";
    }
    changed =  !changed;
  }

  componentDidMount(){
    this.interval = setInterval(() => this.tick(), 1000);
  }

  componentWillUnmount(){
    clearInterval(this.interval);
  }

  render(){
    return(
    <div>
      <h1>Seconds Elapsed: {this.state.secondsElapsed}</h1>
      <svg id="main_disp" width="300" height="300">
        <circle cx="150" cy="150" r="50" fill="black" />
        <circle id="heart" cx="150" cy="150" r="30" fill="red" />
      </svg>
    </div>
  );
  }
}

class App extends React.Component {
  render(){
    return(
      <div>
      <GameDisplay />
      </div>
    )
  };
}



ReactDOM.render(
  <App />,
  document.getElementById("root")
);
</script>
</html>









